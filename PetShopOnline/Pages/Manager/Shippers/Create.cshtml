@page
@model PetShop_Project_SWP391.Pages.Manager.Shippers.CreateModel
@{
}
<script src="~/js/signup/javascript.js"></script>
<div id="content-right">
    <div class="path-admin" style="text-align:center; font-weight:500; font-size: 2.5rem">Thêm Mới Shipper</b></div>
    <div class="content-main">
        <form method="post" id="content-main-product">
            <div class="row mt-2">
                <div class="row mt-3">
                      <div class="col-md-12">
                        <label class="labels">Email</label>
                        <input type="email" required class="form-control" asp-for="EmailShipper">
                    </div>
                    <div class="col-md-12">
                        <label class="labels">Mật khẩu</label>
                        <input type="password" required class="form-control" asp-for="PasswordShipper">
                        <span asp-validation-for="PasswordShipper" class="text-danger" style="color: red;"></span>
                    </div>
                    <div class="col-md-12">
                        <label class="labels">Tên Shipper</label>
                        <input type="text" required class="form-control" asp-for="Shipper.Name">
                    </div>
                    <div class="col-md-12">
                        <label class="labels">Số Điện Thoại</label>
                        <br />
                        <input id="phoneNumber" type="text" asp-for="Shipper.Phone"
                               oninput="checkPhoneNumberFormat()" />
                        <br />
                        <span id="phoneErrorSpan" style="color: red; text-align:center"></span>
                        <div class="msg-error" style="text-align:center;color:red; margin-top: 5px">
                            @ViewData["msgPhone"]
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="labels">Tỉnh</label>
                        <select id="provinceDropdown" onchange="loadDistricts()">
                            <option value="">Chọn tỉnh</option>
                        </select>
                    </div>
                    <div class="col-md-12">
                        <label class="labels">Huyện</label>
                        <select id="districtDropdown" onchange="loadWards()">
                            <option value="">Chọn huyện</option>
                        </select>
                    </div>
                    <div class="col-md-12">
                        <label class="labels">Xã</label>
                        <select id="wardDropdown">
                            <option value="">Chọn xã</option>
                        </select>
                    </div>
                    <div class="col-md-12">
                        <label class="labels">Địa Chỉ Cụ Thể</label>
                        <input type="text" class="form-control" asp-for="Shipper.Address">
                    </div>
                    <input type="hidden" asp-for="Shipper.Province" id="provinceNameInput" />
                    <input type="hidden" asp-for="Shipper.District" id="districtNameInput" />
                    <input type="hidden" asp-for="Shipper.Wards" id="wardsNameInput" />
                </div>
                <div style="margin-Top:30px">
                    <input class="btn btn-primary profile-button" type="submit" value="Thêm Mới" style="margin-bottom: 30px;" />
                </div>
                
                <div class="msg-error" style="text-align:center;color:red">
                    @ViewData["msgEmpty"]
                    @ViewData["msgEmailSame"]
                    @ViewData["msgEmail"]
                    @ViewData["msgError"]
                    @ViewData["error"]
                </div>
                <div style="text-align:left;color:green">
                    @ViewData["msgSuccess"]
                    @ViewData["message"]
                </div>

        </form>
    </div>
</div>
<link href="~/css/managereditproduct.css" rel="stylesheet" />
<script>
    function updateDisplayedNames() {
        var provinceDropdown = document.getElementById("provinceDropdown");
        var districtDropdown = document.getElementById("districtDropdown");
        var wardDropdown = document.getElementById("wardDropdown");

        var selectedProvinceOption = provinceDropdown.options[provinceDropdown.selectedIndex];
        var selectedDistrictOption = districtDropdown.options[districtDropdown.selectedIndex];
        var selectedWardOption = wardDropdown.options[wardDropdown.selectedIndex];

        var provinceNameInput = document.getElementById("provinceNameInput");
        var districtNameInput = document.getElementById("districtNameInput");
        var wardsNameInput = document.getElementById("wardsNameInput");

        provinceNameInput.value = selectedProvinceOption.text;
        districtNameInput.value = selectedDistrictOption.text;
        wardsNameInput.value = selectedWardOption.text;
    }

    function loadDistricts() {
        var provinceDropdown = document.getElementById("provinceDropdown");
        var selectedProvinceOption = provinceDropdown.options[provinceDropdown.selectedIndex];
        selectedProvinceName = selectedProvinceOption.text;

        fetch(`https://provinces.open-api.vn/api/p/${selectedProvinceOption.value}?depth=2`)
            .then(response => response.json())
            .then(data => {
                var districts = data.districts;
                var districtDropdown = document.getElementById("districtDropdown");
                var wardDropdown = document.getElementById("wardDropdown");

                // Clear existing options in district and ward dropdowns
                districtDropdown.innerHTML = "";
                wardDropdown.innerHTML = "";

                // Add new district options
                for (var i = 0; i < districts.length; i++) {
                    var option = document.createElement("option");
                    option.value = districts[i].code;
                    option.text = districts[i].name;
                    districtDropdown.appendChild(option);
                }

                // Update displayed names after loading districts
                updateDisplayedNames();

                // Trigger the change event on district dropdown to load wards
                districtDropdown.dispatchEvent(new Event("change"));
            })
            .catch(error => {
                console.error("Error:", error);
            });
    }

    function loadWards() {
        var districtDropdown = document.getElementById("districtDropdown");
        var selectedDistrictOption = districtDropdown.options[districtDropdown.selectedIndex];
        selectedDistrictName = selectedDistrictOption.text;

        if (selectedDistrictOption.value === "") {
            // Get the first district option
            var firstDistrictOption = districtDropdown.querySelector("option:not([value=''])");
            selectedDistrictName = firstDistrictOption.text;
            firstDistrictOption.selected = true;
        }

        fetch(`https://provinces.open-api.vn/api/d/${selectedDistrictOption.value}?depth=2`)
            .then(response => response.json())
            .then(data => {
                var wards = data.wards;
                var wardDropdown = document.getElementById("wardDropdown");

                // Clear existing options in ward dropdown
                wardDropdown.innerHTML = "";

                // Add new ward options
                for (var i = 0; i < wards.length; i++) {
                    var option = document.createElement("option");
                    option.value = wards[i].code;
                    option.text = wards[i].name;
                    wardDropdown.appendChild(option);
                }

                // Update displayed names after loading wards
                updateDisplayedNames();
            })
            .catch(error => {
                console.error("Error:", error);
            });
    }
</script>


